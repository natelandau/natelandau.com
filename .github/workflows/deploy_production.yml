---
name: "Deploy production"

on:
    push:
        branches:
            - production
        paths:
            - "deploy-to-s3.yml"
            - "site/**"
            - "!site/_drafts/**"
            - "!site/_plugins-disabled/**"
            - "!site/_drafts/**"
            - "!site/_js/unused/**"
    workflow_dispatch:

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

jobs:
    deploy-production:
        runs-on: ubuntu-latest
        steps:
            # DEPENDENCIES
            # -----------------------------------
            - name: Checkout
              uses: actions/checkout@v3

            - name: "Set up Ruby"
              uses: ruby/setup-ruby@v1
              with:
                  ruby-version: "3.1"
                  bundler-cache: true
            - name: Install gems
              run: bundle install

            - name: "Use Node.js 16.x"
              uses: actions/setup-node@v4
              with:
                  node-version: "16.x"
                  cache: "npm"
            - run: npm install

            - name: "Install apt packages"
              run: sudo apt-get install -y libxml2-utils yamllint libmagickwand-dev

            - name: "Delete Staging Site from Internet"
              run: scripts/deploy-to-s3.sh --force --bucket-name=${{ secrets.AWS_S3_TEST_BUCKET_NAME }} --delete-all

            - name: "Create AWS Cloudfront Invalidation for Staging"
              run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_STAGING_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

            - name: "Build Production Site"
              run: npx grunt deploy_prod

            - name: "Deploy to AWS S3 Production"
              run: scripts/deploy-to-s3.sh --force --bucket-name=${{ secrets.AWS_S3_PRODUCTION_BUCKET_NAME }} --source-dir _siteProd

            - name: "Create AWS Cloudfront Invalidation for Production"
              run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
