---
name: "Build & Deploy"

on:
    push:
        branches:
            # - main
            # - master
            - deployment
    #     paths:
    #         - "site/**/*.{js,less,css,html,md,xml,json,yml,yaml}"
    # Allow workflow to be triggered manually
    workflow_dispatch:

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    BUILD: staging

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            # DEPENDENCIES
            # -----------------------------------
            - name: Checkout
              uses: actions/checkout@v3

            - name: Set up Ruby
              uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
              with:
                  ruby-version: "3.1"
                  bundler-cache: true
            - name: Install gems
              run: bundle install

            - name: Use Node.js 16.x
              uses: actions/setup-node@v3
              with:
                  node-version: "16.x"
                  cache: "npm"
            - run: npm install

            - name: Install apt packages
              run: sudo apt-get install -y libxml2-utils yamllint libmagickwand-dev

            # Build Production Site
            # -----------------------------------
            - name: Build Production Site
              if: ${{ env.BUILD == 'production' }}
              run: npx grunt deploy_prod

            - name: Build Production Site
              if: ${{ env.BUILD != 'production' }}
              run: npx grunt deploy_prod_relative

            # Deploy Site to AWS
            # -----------------------------------
            - name: "Deploy to AWS S3 Production"
              if: ${{ env.BUILD == 'production' }}
              run: scripts/deploy-to-s3.sh --force --bucket-name=${{ secrets.AWS_S3_TEST_BUCKET_NAME }}

            # - name: "Create AWS Cloudfront Invalidation"
            #   if: ${{ env.BUILD == 'production' }}
            #   run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

            - name: "Deploy to AWS S3"
              if: ${{ env.BUILD != 'production' }}
              run: scripts/deploy-to-s3.sh --force --bucket-name=${{ secrets.AWS_S3_TEST_BUCKET_NAME }}
